@page "/estilosvida/nuevo"
@page "/estilosvida/editar/{Id:int}"
@rendermode InteractiveServer
@inject IRepositorioEstilosVida _repositorio
@inject NavigationManager _nav

<h3>@(Estilo.Id == 0 ? "Nuevo Estilo de Vida" : "Editar Estilo de Vida")</h3>

<EditForm Model="Estilo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label class="form-label">Nombre</label>
        <InputText class="form-control" @bind-Value="Estilo.Nombre" />
        <ValidationMessage For="@(() => Estilo.Nombre)" />
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <a class="btn btn-secondary" href="/estilosvida">Cancelar</a>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    private EstiloVida Estilo { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue && Id.Value != 0)
        {
            var estiloExistente = await _repositorio.GetById(Id.Value);
            if (estiloExistente != null)
            {
                Estilo = estiloExistente;
            }
            else
            {
                _nav.NavigateTo("/estilosvida");
            }
        }
        else
        {
            Estilo = new();
        }
    }

    private async Task Guardar()
    {
        if (!string.IsNullOrWhiteSpace(Estilo.Nombre))
        {
            if (Estilo.Id == 0)
            {
                await _repositorio.Add(Estilo);
            }
            else
            {
                await _repositorio.Update(Estilo);
            }

            _nav.NavigateTo("/estilosvida");
        }
    }
}